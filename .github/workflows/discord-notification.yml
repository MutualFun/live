name: Discord Notifications 

on: workflow_dispatch

jobs:
  check-for-live-content:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the Project Board
        uses: actions/github-script@v3
        id: set-result
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: | 
            const fs = require('fs')

            const result = await github.projects.getCard({
              card_id: 56801078,
            });

            const issue = await github.request(result.data.content_url)
            fs.writeFileSync('result.json', JSON.stringify(issue));
      - name: Upload issue artifact
        uses: actions/upload-artifact@v2
        with:
          name: issue-data
          path: result.json
  

  send-discord-notifcation:
    needs: ['check-for-live-content']
    runs-on: ubuntu-latest
    steps:
      - name: Download issue artifact
        uses: actions/download-artifact@v2
        with:
          name: issue-data
      - name: Print the final result
        id: data
        shell: bash
        run: |
          echo "ISSUE_TITLE=$(jq '.data.title' result.json)" >> GITHUB_ENV
      - name: Set environment variables
        run: |
          echo "PR_TITLE=[Test] Add report file $(date +%d-%m-%Y)" >> $GITHUB_ENV
          echo "PR_BODY=This PR was auto-generated on $(date +%d-%m-%Y) by [create-pull-request](https://github.com/peter-evans/create-pull-request)." >> $GITHUB_ENV
      - run: |
          echo "${{ env.ISSUE_TITLE }}"
#       - name: Discord notification
#         env:
#           DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
#         uses: Ilshidur/action-discord@master
#         with:
#           args: 'Hello World, ${{ steps.data.outputs.title }} is up next for streaming'
